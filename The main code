import pygame
from player import player
#from enemy import enemy
pygame.init()
pygame.display.set_caption("Verdammt - 2D edition")
screen = pygame.display.set_mode((1000, 800))
clock = pygame.time.Clock()
gameover = False


p1 = player()


ticker = 0


#CONSTANTS
LEFT = 0
RIGHT = 1
UP = 2
DOWN = 3
SPACE = 4
W = 5

keys = [False, False, False, False, False]

mapNum = 1
#MAP 1______________________________________________________________________________________
map = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 5, 2, 2, 6, 2, 4, 0, 0, 0],
       [0, 5, 7, 7, 12, 16, 4, 0, 0, 0],
       [0, 5, 13, 14, 15, 16, 2, 2, 4, 0],
       [0, 5, 17, 1, 1, 15, 14, 9, 4, 0],
       [0, 5, 16, 17, 18, 17, 18, 8, 4, 0],
       [0, 22, 3, 3, 3, 3, 3, 3, 23, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],]
#MAP 2______________________________________________________________________________________
map2 =[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 5, 2, 2, 2, 2, 4, 0, 0],
       [0, 0, 5, 1, 1, 1, 1, 4, 0, 0],
       [5, 2, 2, 1, 1, 1, 1, 2, 4, 0],
       [5, 16, 16, 1, 1, 1, 1, 1, 4, 0],
       [5, 16, 16, 17, 1, 1, 1, 1, 4, 0],
       [5, 16, 16, 16, 1, 1, 1, 1, 4, 0],
       [22, 3, 3, 3, 3, 6, 3, 3, 23, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],]

#MAP 3______________________________________________________________________________________
map3 = [[],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        [],
        []]

wood = pygame.image.load('wood.png') # solid
wood2 = pygame.image.load('L wood.png') #solid
wood3 = pygame.image.load('R wood.png') #solid
wood4 = pygame.image.load('UP wood.png') #solid
wood5 = pygame.image.load('wood corner L.png') #solid
wood6 = pygame.image.load('wood corner R.png')
floor = pygame.image.load('floorwood.png') #walkable
door = pygame.image.load('door.png') #interactable
bedUP = pygame.image.load('bed U.png')
bedDOWN = pygame.image.load('bed L.png')
drawer = pygame.image.load('drawer.png')
dirtwood = pygame.image.load('dirtwood.png')
dirtwoodU = pygame.image.load('dirtwoodU.png')
dirtwoodD = pygame.image.load('dirtwoodD.png')
dirt = pygame.image.load('dirt.png')
dirt2 = pygame.image.load('below door floor.png')
dirt3 = pygame.image.load('nextdirt.png')
dirt4 = pygame.image.load('dirtcorner.png')
dirt5 = pygame.image.load('dirtcorner2.png')
frontdoor = pygame.image.load('front door.png')
housewall = pygame.image.load('house wall.png') #solid
grass = pygame.image.load('grass.png')
trees = pygame.image.load('trees.png') #solid
Madeline = pygame.image.load('Madeline.png') #solid #interactable



#GAMELOOP--------------------------------------------------
while not gameover:
    clock.tick(60)
    
    #input-------------------------------------------------
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            gameover = True
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                keys[LEFT] = True
            elif event.key == pygame.K_RIGHT:
                keys[RIGHT] = True 
            elif event.key == pygame.K_UP:
                keys[UP] = True
            elif event.key == pygame.K_DOWN:
                keys[DOWN] = True
                
        elif event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT:
                keys[LEFT] = False
            elif event.key == pygame.K_RIGHT:
                keys[RIGHT] = False 
            elif event.key == pygame.K_UP:
                keys[UP] = False
            elif event.key == pygame.K_DOWN:
                keys[DOWN] = False


                
    #Physics-----------------------------------------------
    if mapNum == 1:
        p1.move(keys, map)
    elif mapNum == 2:
        p1.move(keys, map2)
    #elif mapNum == 3:
        #p1.move(keys, map3)
            
    #teleport!
        
        #from map 1 to map2
    if mapNum == 1:
        if map[int((p1.ypos) / 50)][int ( (p1.xpos) / 50)] == 6:
            mapNum = 2
            p1.xpos = 260
            p1.ypos = 345
        
        #from map 2 to map1
    if mapNum == 2:
        if map2[int((p1.ypos) / 50)][int ( (p1.xpos) / 50)] == 6:
            mapNum = 1
            p1.xpos = 215
            p1.ypos = 245
        
        #from map 2 to map 3
    #if mapNum == 2:
        #if map2[int((p1.ypos) / 50)][int ( (p1.xpos) / 50)] == 66:
            #mapNum = 3
            #p1.xpos = 215
            #p1.ypos = 245
    
        

    #Renders-----------------------------------------------
    
        
    screen.fill((0, 0, 0))
    
    #draw map-----------------------------------------------
    if mapNum == 1:
        for i in range(11): #Y axis for tiles
            for j in range(10): #X axis for tiles
                if map[i][j] == 1:
                    screen.blit(floor, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 2:
                    screen.blit(wood, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 4:
                    screen.blit(wood2, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 5:
                    screen.blit(wood3, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 3:
                    screen.blit(wood4, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 6:
                    screen.blit(door, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 8:
                    screen.blit(bedDOWN, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 9:
                    screen.blit(bedUP, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 7:
                    screen.blit(drawer, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 11:
                    screen.blit(dirtwoodU, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 12:
                    screen.blit(dirtwood, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 13:
                    screen.blit(dirtwoodD, (j * 50, i * 50),(0, 0, 50, 50))                
                if map[i][j] == 15:
                    screen.blit(dirt2, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 14:
                    screen.blit(dirt3, (j * 50, i * 50),(0, 0, 50, 50))  
                if map[i][j] == 16:
                    screen.blit(dirt, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 17:
                    screen.blit(dirt4, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 18:
                    screen.blit(dirt5, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 22:
                    screen.blit(wood5, (j * 50, i * 50),(0, 0, 50, 50))
                if map[i][j] == 23:
                    screen.blit(wood6, (j * 50, i * 50),(0, 0, 50, 50))
    elif mapNum == 2:
        for i in range(11): #Y axis for tiles
            for j in range(10): #X axis for tiles
                if map2[i][j] == 1:
                    screen.blit(floor, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 2:
                    screen.blit(wood, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 3:
                    screen.blit(wood4, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 4:
                    screen.blit(wood2, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 5:
                    screen.blit(wood3, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 17:
                    screen.blit(dirt4, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 13:
                    screen.blit(dirtwoodD, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 16:
                    screen.blit(dirt, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 22:
                    screen.blit(wood5, (j * 50, i * 50),(0, 0, 50, 50))
                if map2[i][j] == 23:
                    screen.blit(wood6, (j * 50, i * 50),(0, 0, 50, 50))
    #elif mapNum == 3
        for i in range(11): #Y axis for tiles
            for j in range(10): #X axis for tiles
                if map2[i][j] == 1:
                    screen.blit(floor, (j * 50, i * 50),(0, 0, 50, 50))
                    
                    
                    
    pygame.draw.rect(screen, (100, 100, 100), (0, 575 , 500, 300), 500)
    pygame.draw.rect(screen, (100, 100, 100), (490, 0 , 700, 800), 500)
    pygame.draw.rect(screen, (150, 100, 100), (600, 200 , 300, 200), 500)

    p1.draw(screen)
    

    

    pygame.display.flip()
